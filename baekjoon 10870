/*
문제: 피보나치 수는 0과 1로 시작합니다. 
0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1입니다.
그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 됩니다.

이를 식으로 써보면, F_n = F_n-1 + F_n-2(n ≥ 2)가 됩니다.
n = 17일 때 까지 피보나치 수를 써보면, 
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597
입니다.

n이 주어졌을 때 n번째 피보나치 수를 구하는 프로그램을 작성해 보십시오.
*/


#include <iostream>   // 풀이의 키워드 : 재귀를 이용하면 됩니다.
#include <cstdio>

using namespace std;

int fibo(int num)
{
    if(num == 0)
    {
        return 0;
    }
    if(num == 1)
    {
        return 1;
    }
    return fibo(num - 2) + fibo(num - 1);
}

int main()
{
    int num;

    cin >> n;

    cout << fibo(n) << '\n';
}